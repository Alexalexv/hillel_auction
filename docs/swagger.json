{
    "swagger": "2.0",
    "info": {
        "description": "My first project.",
        "title": "AuthServiceAPI",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/item": {
            "post": {
                "description": "Create new item endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Create item",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpmodels.CreateItemRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Message: INCORRECT_REQUEST_BODY, VALIDATION_FAILED",
                        "schema": {
                            "$ref": "#/definitions/httpmodels.Error"
                        }
                    }
                }
            }
        },
        "/item/all": {
            "get": {
                "description": "Returns all items of current user user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Returns all items",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/item/{id}": {
            "get": {
                "description": "Returns item by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Returns item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Message: INCORRECT_PARAMETER",
                        "schema": {
                            "$ref": "#/definitions/httpmodels.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Update item by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Update item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/httpmodels.CreateItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Message: INCORRECT_REQUEST_BODY, VALIDATION_FAILED, INCAORRECT_PARAMETER",
                        "schema": {
                            "$ref": "#/definitions/httpmodels.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete item by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "Delete item",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "httpmodels.CreateItemRequest": {
            "type": "object",
            "required": [
                "Description",
                "MinBuyPrice",
                "Name",
                "Pictures",
                "SoldPrice"
            ],
            "properties": {
                "Description": {
                    "type": "string"
                },
                "MinBuyPrice": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Pictures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "SoldPrice": {
                    "type": "integer"
                }
            }
        },
        "httpmodels.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}